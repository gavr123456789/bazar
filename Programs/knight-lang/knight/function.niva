type FunctionT 
  name: String 
  arity: Int 
  fn: [List::Value -> Value]




constructor FunctionT knownFunctions = [
  
  trueF = FunctionT 
    name: "TRUE" 
    arity: 0 
    fn: [ BoolT v: true ]

  falseF = FunctionT 
    name: "FALSE" 
    arity: 0 
    fn: [ BoolT v: false ]
  
  nullF = FunctionT 
    name: "NULL" 
    arity: 0 
    fn: [ NullT new ]

  atF = FunctionT 
    name: "@" 
    arity: 0 
    fn: [ ListT new ]

  promptF = FunctionT 
    name: "PROMPT" 
    arity: 0 
    fn: [ TO DO: "func prompt(_ []Value) (Value, error) {" ]
  
  randomF = FunctionT 
    name: "RANDOM" 
    arity: 0 
    fn: [ IntegerT v: (0..99999 |> random) ]
  
  // arity 1
  noopF = FunctionT 
    name: ":" 
    arity: 1
    fn: [ TO DO: "Run" ]

  result = #{
    'T' trueF
    'F' falseF
    'N' nullF
    '@' atF
    'P' promptF
    'R' randomF
    
    ':' noopF

  }
  
  ^ result
  // stdinScanner = bufio.NewScanner(os.Stdin)
]