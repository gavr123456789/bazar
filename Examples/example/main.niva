String surroundWith::String and::String = 
  surroundWith + this + and

String surroundWith: x::String = 
  x + this + x

String packForJson -> String = 
   this escape surroundWith: "\""

String escape = 
  this replace: "\\" with: "\\\\",
  replace: "\"" with: "\\\"",
  replace: "\n" with: "\\n",
  replace: "\r" with: "\\r",
  replace: "\t" with: "\\t",
  replace: "\'" with: "\\'" 

Dynamic toJson -> String = | this 
| DynamicStr => value packForJson 
| DynamicInt => value toString
| DynamicDouble => value toString
| DynamicBoolean => value toString
| DynamicList => value dynListToJson
| DynamicObj  => value dynObjectToJson

enum Color = Red | Blue | Green
type Card color: Color

c = Card color: Color.Red
dynamic = Card toDynamic: c
dynamic toJson echo
c2 = Card fromDynamic: dynamic
c2 echo



MutableMap(String, Dynamic) dynObjectToJson -> String = [
  createObj = [
    b = StringBuilder new
    mut i = 0
    this forEach: [ k, v ->

      b append: k packForJson |>
        append: ": " |>
        append: v toJson 
      i + 1 != this count => b append: ", "

      i <- i inc
    ]
    b toString
  ]

  ^createObj do surroundWith: "{ " and: " }" 
]


List::Dynamic dynListToJson -> String = [
  createArr = [
    b = StringBuilder new
    this forEachIndexed: [ i, it ->
      b append: it toJson 
      i + 1 != this count => b append: ", "
    ]
    b toString
  ]

  ^createArr do surroundWith: "[ " and: " ]" 
]


// type Wallet money: Int
// type Person name: String age: Int wallet: Wallet
// p1 = Person name: "Alice" age: 25 wallet: (Wallet money: 42)
// Person toDynamic: p1, toJson echo